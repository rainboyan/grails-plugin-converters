buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsGradlePluginVersion"
    }
}

group "org.grails.plugins"
version project.projectVersion

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:'java-library'
apply plugin:"org.grails.grails-plugin"
apply plugin:"org.grails.internal.grails-plugin-publish"

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://repo.grails.org/grails/core" }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8
configurations {
    documentation
}

dependencies {
    if (configurations.find { it.name == 'documentation' }) {
        documentation 'info.picocli:picocli:3.8.0'
        documentation "org.fusesource.jansi:jansi:1.18"
        documentation "jline:jline:2.14.6"
        documentation "com.github.javaparser:javaparser-core:3.15.14"
        documentation "org.codehaus.groovy:groovy:$groovyVersion"
        documentation "org.codehaus.groovy:groovy-ant:$groovyVersion"
        documentation "org.codehaus.groovy:groovy-cli-picocli:$groovyVersion"
    }

    api "org.apache.commons:commons-lang3:3.12.0"
    api "org.grails:grails-web:$grailsVersion"
    api "org.grails:grails-plugin-domain-class:$grailsVersion"
    implementation "org.grails.plugins:async:$grailsAsyncPluginVersion"
    implementation "javax.servlet:javax.servlet-api:4.0.1"
    testImplementation "javax.servlet:javax.servlet-api:4.0.1"
    testImplementation("org.spockframework:spock-core:$spockVersion") {
        exclude module:'groovy-all'
    }
}

def DOCUMENTATION_GROUP = 'Documentation'

tasks.withType(Groovydoc) {
    group = DOCUMENTATION_GROUP
    docTitle = "Grails Converter Plugin"
    destinationDir = project.file("build/docs/api")
    def files = []
    project.rootProject.subprojects
            .findAll { !it.name != 'docs' && !it.name.startsWith('examples') }
            .each { subproject ->
                if(subproject.file('src/main/groovy').exists()) {
                    files += subproject.files("src/main/groovy")
                }
            }
    if(project.file('src/main/groovy').exists()) {
        files += project.files("src/main/groovy")
    }
    source = files
    classpath += configurations.documentation
}

grailsPublish {
    userOrg = "grails"
    githubSlug = 'grails-plugins/grails-plugin-converters'
    license {
        name = 'Apache-2.0'
    }
    title = "Grails Converters Plugin"
    desc = "Provides JSON and XML converters"
    developers = [graemerocher: "Graeme Rocher"]
}
